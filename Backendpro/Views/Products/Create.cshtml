@model Backendpro.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Productname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Productname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Productname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })*@

                <div class="file_input_div">
                    <div class="file_input">
                        <label class="image_input_button mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored">
                            <i class=" material-icons" style="color:blue;margin-top:13px;">file_upload</i>
                            <input id="file_input_file" class="none" type="file" name="productimg" style="margin-top:13px;"/>
                            <input class="file_input_text mdl-textfield__input" type="text" disabled readonly id="file_input_text" />
                            <label class="mdl-textfield__label" for="file_input_text"></label>
                        </label>
                    </div>
                    <div id="file_input_text_div" class="mdl-textfield mdl-js-textfield textfield-demo">
                        
                    </div>
                </div>




                @*@Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Units, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Units, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Baseprice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Baseprice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Baseprice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section styles{
    <style type="text/css">
        .file_input_div {
          margin: auto;
          width: 350px;
          height: 40px;
        }

        .file_input {
          float: left;
        }

        #file_input_text_div {
          width: 200px;
          margin-top: -8px;
          margin-left: 5px;
        }

        .none {
          display: none;
        }
    </style>
    
}

@section scripts {

    <script>

      var fileInputTextDiv = document.getElementById('file_input_text_div');
        var fileInput = document.getElementById('file_input_file');
        var fileInputText = document.getElementById('file_input_text');

        fileInput.addEventListener('change', changeInputText);
        fileInput.addEventListener('change', changeState);

        function changeInputText() {
          var str = fileInput.value;
          var i;
          if (str.lastIndexOf('\\')) {
            i = str.lastIndexOf('\\') + 1;
          } else if (str.lastIndexOf('/')) {
            i = str.lastIndexOf('/') + 1;
          }
          fileInputText.value = str.slice(i, str.length);
        }

        function changeState() {
          if (fileInputText.value.length != 0) {
            if (!fileInputTextDiv.classList.contains("is-focused")) {
              fileInputTextDiv.classList.add('is-focused');
            }
          } else {
            if (fileInputTextDiv.classList.contains("is-focused")) {
              fileInputTextDiv.classList.remove('is-focused');
            }
          }
        }

    </script>

}